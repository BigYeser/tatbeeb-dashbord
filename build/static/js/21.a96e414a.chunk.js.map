{"version":3,"sources":["views/app-views/new-image-carousel/index.js"],"names":["NewImageCarousel","selectedImage","history","useHistory","dispatch","useDispatch","Form","useForm","form","confirm","Modal","useSelector","state","saveImageCarouselLoading","settings","saveImageCarouselSuccess","saveImageCarouselError","shallowEqual","message","success","goBack","error","onFinish","values","a","action","fileName","image_carousel","file","name","fileList","originFileObj","saveImageCarouselInit","onImageRemove","console","log","title","loading","labelCol","span","wrapperCol","data","content","onOk","onCancel","scrollToFirstError","labelAlign","initialValues","Item","label","rules","required","listType","multiple","maxCount","beforeUpload","type","size","onRemove","icon","offset","htmlType"],"mappings":"2QAoIeA,UAxHU,WACvB,IAiBIC,EAjBEC,EAAUC,cACVC,EAAWC,cACjB,EAAeC,IAAKC,UAAbC,EAAP,oBACQC,EAAYC,IAAZD,QACR,EAIIE,aACF,SAACC,GAAD,MAAY,CACVC,yBAA0BD,EAAME,SAASD,yBACzCE,yBAA0BH,EAAME,SAASC,yBACzCC,uBAAwBJ,EAAME,SAASE,0BAEzCC,KATAJ,EADF,EACEA,yBACAE,EAFF,EAEEA,yBACAC,EAHF,EAGEA,wBAW+B,IAA7BD,IACFG,IAAQC,QAAQ,kCAChBjB,EAAQkB,WAEqB,IAA3BJ,GACFE,IAAQG,MAAM,WAAaL,GAc7B,IAAMM,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACXvB,GACEwB,EAAS,CACXC,SAAUH,EAAOI,eAAeC,KAAKC,KACrCD,KAAML,EAAOI,eAAeG,SAAS,GAAGC,eAE1C3B,EAAS4B,YAAsBP,KAE/BP,IAAQG,MAAM,wBARD,2CAAH,sDAYRY,EAAa,uCAAG,WAAOV,GAAP,SAAAC,EAAA,sDACpBU,QAAQC,IACN,mEACAlC,GAEFA,EAAgB,KALI,2CAAH,sDAsBnB,OACE,cAAC,IAAD,CAAMmC,MAAM,qBAAqBC,QAASxB,EAA1C,SACE,eAAC,IAAD,CACEyB,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpB/B,KAAMA,EACNqB,KAAK,wBACLP,SApDN,SAA4BmB,GAC1BhC,EAAQ,CACN2B,MAAM,6DACNM,QAAS,+DACTC,KAHM,WAIJrB,EAASmB,IAEXG,SANM,gBAoDJC,oBAAkB,EAClBC,WAAW,OACXC,cAAe,KARjB,UAUE,cAAC,IAAKC,KAAN,CACEnB,KAAK,iBACLoB,MAAM,iBACNC,MAAO,CACL,CACEC,UAAU,EACVjC,QAAS,+BANf,SAUE,cAAC,IAAD,CACEW,KAAK,OACLuB,SAAS,UACTC,UAAQ,EACRC,SAAU,EACVC,aAzCV,SAAsB3B,GACa,eAAdA,EAAK4B,MAAuC,cAAd5B,EAAK4B,KAKvC5B,EAAK6B,KAAO,KAAO,KAAO,EAKzCxD,EAAgB2B,EAHdV,IAAQG,MAAM,gCALdH,IAAQG,MAAM,sCAuCRqC,SAAUzB,EANZ,SAQE,cAAC,IAAD,CAAQ0B,KAAM,cAAC,IAAD,IAAd,iCAGJ,cAAC,IAAKX,KAAN,CACER,WAAY,CACVoB,OAAQ,EACRrB,KAAM,IAHV,SAME,cAAC,IAAD,CAAQiB,KAAK,UAAUK,SAAS,SAAhC","file":"static/js/21.a96e414a.chunk.js","sourcesContent":["import {\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Upload,\r\n} from \"antd\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { saveImageCarouselInit } from \"redux/actions/SettingsActions\";\r\nconst NewImageCarousel = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const [form] = Form.useForm();\r\n  const { confirm } = Modal;\r\n  const {\r\n    saveImageCarouselLoading,\r\n    saveImageCarouselSuccess,\r\n    saveImageCarouselError,\r\n  } = useSelector(\r\n    (state) => ({\r\n      saveImageCarouselLoading: state.settings.saveImageCarouselLoading,\r\n      saveImageCarouselSuccess: state.settings.saveImageCarouselSuccess,\r\n      saveImageCarouselError: state.settings.saveImageCarouselError,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  let selectedImage;\r\n  if (saveImageCarouselSuccess === true) {\r\n    message.success(\"success add new image carousel\");\r\n    history.goBack();\r\n  }\r\n  if (saveImageCarouselError === true) {\r\n    message.error(\"Error : \" + saveImageCarouselError);\r\n  }\r\n\r\n  function showPromiseConfirm(data) {\r\n    confirm({\r\n      title: `Are you sure you want to upload this image into a carousel`,\r\n      content: \"This image will be seen by all your clients on the main page\",\r\n      onOk() {\r\n        onFinish(data);\r\n      },\r\n      onCancel() {},\r\n    });\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    if (selectedImage) {\r\n      let action = {\r\n        fileName: values.image_carousel.file.name,\r\n        file: values.image_carousel.fileList[0].originFileObj,\r\n      };\r\n      dispatch(saveImageCarouselInit(action));\r\n    } else {\r\n      message.error(\"Image can't be empty\");\r\n    }\r\n  };\r\n\r\n  const onImageRemove = async (values) => {\r\n    console.log(\r\n      \"ðŸš€ ~ file: index.js ~ line 56 ~ onImageRemove ~ values\",\r\n      selectedImage\r\n    );\r\n    selectedImage = null;\r\n  };\r\n\r\n  function beforeUpload(file) {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n      return;\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n      return;\r\n    }\r\n    selectedImage = file;\r\n  }\r\n\r\n  return (\r\n    <Card title=\"New Image Corausel\" loading={saveImageCarouselLoading}>\r\n      <Form\r\n        labelCol={{ span: 3 }}\r\n        wrapperCol={{ span: 10 }}\r\n        form={form}\r\n        name=\"doctor_category_input\"\r\n        onFinish={showPromiseConfirm}\r\n        scrollToFirstError\r\n        labelAlign=\"left\"\r\n        initialValues={null}\r\n      >\r\n        <Form.Item\r\n          name=\"image_carousel\"\r\n          label=\"Image Carousel\"\r\n          rules={[\r\n            {\r\n              required: false,\r\n              message: \"Please chose Category Icon\",\r\n            },\r\n          ]}\r\n        >\r\n          <Upload\r\n            name=\"logo\"\r\n            listType=\"picture\"\r\n            multiple\r\n            maxCount={1}\r\n            beforeUpload={beforeUpload}\r\n            onRemove={onImageRemove}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 3,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NewImageCarousel;\r\n"],"sourceRoot":""}