{"version":3,"sources":["views/app-views/transaction/index.js"],"names":["Transaction","useSelector","state","transactionList","transaction","data","error","loading","deleted","delete","shallowEqual","dateFormat","el","map","date","Date","createdAt","createdAt_newFormate","getDate","getMonth","getFullYear","getHours","getMinutes","dispatch","useDispatch","useEffect","getTransactionInit","dataSource","columns","title","key","dataIndex"],"mappings":"iIAAA,4DAgFeA,UA5EK,WAClB,MAAqCC,aACnC,SAACC,GAAD,MAAY,CACVC,gBAAiBD,EAAME,YAAYC,KACnCC,MAAOJ,EAAME,YAAYE,MACzBC,QAASL,EAAME,YAAYG,QAC3BC,QAASN,EAAME,YAAYK,UAE7BC,KAPMP,EAAR,EAAQA,gBAAiBI,EAAzB,EAAyBA,QAezB,SAASI,EAAWC,GAClB,OAAGA,EAAK,GACC,IAAIA,EAENA,EATTT,EAAgBU,KAAI,SAAAD,GAClB,IAAIE,EAAO,IAAIC,KAAKH,EAAGI,WACvBJ,EAAGK,qBAAuBH,EAAKI,UAAU,IAAIJ,EAAKK,WAAW,IAAIL,EAAKM,cAAc,KAAKT,EAAWG,EAAKO,YAAY,IAAIV,EAAWG,EAAKQ,iBAQxI,IAAMC,EAAWC,cAEpBC,qBAAU,WACRF,EAASG,iBACR,CAACH,IAqCJ,OACE,gCACG,IACD,cAAC,IAAD,UACE,cAAC,IAAD,CACEI,WAAYxB,EACZyB,QAzCQ,CACd,CACEC,MAAO,OACPC,IAAK,uBACLC,UAAW,wBAEb,CACEF,MAAO,SACPE,UAAW,SACXD,IAAK,UAEP,CACED,MAAO,SACPE,UAAW,SACXD,IAAK,UAEP,CACID,MAAO,UACPE,UAAW,SACXD,IAAK,UAET,CACID,MAAO,eACPE,UAAW,aACXD,IAAK,eAkBHvB,QAASA","file":"static/js/23.beb03802.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getTransactionInit } from \"redux/actions/TransactionActions\";\r\nimport { Card, Table } from \"antd\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nconst Transaction = () => {\r\n  const { transactionList, loading } = useSelector(\r\n    (state) => ({\r\n      transactionList: state.transaction.data,\r\n      error: state.transaction.error,\r\n      loading: state.transaction.loading,\r\n      deleted: state.transaction.delete,\r\n    }),\r\n    shallowEqual\r\n  );\r\n  // eslint-disable-next-line array-callback-return\r\n  transactionList.map(el => {\r\n    let date = new Date(el.createdAt)\r\n    el.createdAt_newFormate = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear()+'\\n'+dateFormat(date.getHours())+\":\"+dateFormat(date.getMinutes());\r\n  });\r\n\r\n  function dateFormat(el){\r\n    if(el < 10){\r\n      return \"0\"+el;\r\n    }\r\n    return el;\r\n  }  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTransactionInit());\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Date\",\r\n      key: \"createdAt_newFormate\",\r\n      dataIndex: \"createdAt_newFormate\",\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n    },\r\n    {\r\n        title: \"User Id\",\r\n        dataIndex: \"userId\",\r\n        key: \"userId\",\r\n    },\r\n    {\r\n        title: \"time slot ID\",\r\n        dataIndex: \"timeSlotId\",\r\n        key: \"timeSlotId\",\r\n    },\r\n   /*\r\n    {\r\n      title: \"Charged\",\r\n      dataIndex: \"charged\",\r\n      key: \"charged\",\r\n      render : (text) => String(text),\r\n    },\r\n    */\r\n  ];\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Card>\r\n        <Table\r\n          dataSource={transactionList}\r\n          columns={columns}\r\n          loading={loading}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n"],"sourceRoot":""}