{"version":3,"sources":["views/app-views/charge/index.js"],"names":["Charge","useSelector","state","chargeList","charge","data","error","loading","deleted","delete","shallowEqual","dispatch","useDispatch","dateFormat","el","useEffect","getChargeInit","map","date","Date","createdAt","createdAt_newFormate","getDate","getMonth","getFullYear","getHours","getMinutes","scroll","x","dataSource","columns","title","key","dataIndex"],"mappings":"iIAAA,4DA6GeA,UAzGA,WACb,MAAgCC,aAC9B,SAACC,GAAD,MAAY,CACVC,WAAYD,EAAME,OAAOC,KACzBC,MAAOJ,EAAME,OAAOE,MACpBC,QAASL,EAAME,OAAOG,QACtBC,QAASN,EAAME,OAAOK,UAExBC,KAPMP,EAAR,EAAQA,WAAYI,EAApB,EAAoBA,QASdI,EAAWC,cAajB,SAASC,EAAWC,GAClB,OAAGA,EAAK,GACC,IAAIA,EAENA,EAfTC,qBAAU,WACRJ,EAASK,iBACR,CAACL,IAIJR,EAAWc,KAAI,SAAAH,GACb,IAAII,EAAO,IAAIC,KAAKL,EAAGM,WACvBN,EAAGO,qBAAuBH,EAAKI,UAAU,IAAIJ,EAAKK,WAAW,IAAIL,EAAKM,cAAc,KAAKX,EAAWK,EAAKO,YAAY,IAAIZ,EAAWK,EAAKQ,iBAsE3I,OACE,gCACG,IACD,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,OAAQ,CAAEC,GAAG,GACbC,WAAY1B,EACZ2B,QAlEQ,CACd,CACEC,MAAO,OACPC,IAAK,YACLC,UAAW,aAEb,CACEF,MAAO,SACPE,UAAW,SACXD,IAAK,UAEP,CACED,MAAO,WACPE,UAAW,WACXD,IAAK,YAUP,CACED,MAAO,SACPE,UAAW,SACXD,IAAK,UAEP,CACED,MAAO,WACPE,UAAW,YACXD,IAAK,aAqBP,CACED,MAAO,UACPE,UAAW,SACXD,IAAK,WAWDzB,QAASA","file":"static/js/19.9fbb1203.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { getChargeInit } from \"redux/actions/ChargeActions\";\r\nimport { Card, Table } from \"antd\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nconst Charge = () => {\r\n  const { chargeList, loading } = useSelector(\r\n    (state) => ({\r\n      chargeList: state.charge.data,\r\n      error: state.charge.error,\r\n      loading: state.charge.loading,\r\n      deleted: state.charge.delete,\r\n    }),\r\n    shallowEqual\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getChargeInit());\r\n  }, [dispatch]);\r\n\r\n\r\n  // eslint-disable-next-line array-callback-return\r\n  chargeList.map(el => {\r\n    let date = new Date(el.createdAt)\r\n    el.createdAt_newFormate = date.getDate()+\"/\"+date.getMonth()+\"/\"+date.getFullYear()+'\\n'+dateFormat(date.getHours())+\":\"+dateFormat(date.getMinutes());\r\n  });\r\n\r\n  function dateFormat(el){\r\n    if(el < 10){\r\n      return \"0\"+el;\r\n    }\r\n    return el;\r\n  }\r\n  \r\n\r\n  const columns = [\r\n    {\r\n      title: \"Date\",\r\n      key: \"createdAt\",\r\n      dataIndex: \"createdAt\",\r\n    },\r\n    {\r\n      title: \"Amount\",\r\n      dataIndex: \"amount\",\r\n      key: \"amount\",\r\n    },\r\n    {\r\n      title: \"Currency\",\r\n      dataIndex: \"currency\",\r\n      key: \"currency\",\r\n    },\r\n    /*\r\n    {\r\n      title: \"Charged\",\r\n      dataIndex: \"charged\",\r\n      key: \"charged\",\r\n      render : (text) => String(text),\r\n    },\r\n    */\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n    },\r\n    {\r\n      title: \"chargeId\",\r\n      dataIndex: \"charge_id\",\r\n      key: \"charge_id\",\r\n    },\r\n    // {\r\n    //   title: \"Link Receipt\",\r\n    //   key: \"linkReceipt\",\r\n    //   dataIndex:\"linkReceipt\",\r\n    //   render: (text, record) => (\r\n    //     <>\r\n    //       {\r\n    //         <a href={record.linkReceipt} target=\"_blank\" rel=\"noreferrer\">\r\n    //           Link Receipt\r\n    //         </a>\r\n    //       }\r\n    //     </>\r\n    //   ),\r\n    // },\r\n    // {\r\n    //   title: \"Stripe Payment ID\",\r\n    //   dataIndex: \"stripePaymentId\",\r\n    //   key: \"stripePaymentId\",\r\n    // },\r\n    {\r\n      title: \"User Id\",\r\n      dataIndex: \"userId\",\r\n      key: \"userId\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Card>\r\n        <Table\r\n          scroll={{ x: true }}\r\n          dataSource={chargeList}\r\n          columns={columns}\r\n          loading={loading}\r\n        />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Charge;\r\n"],"sourceRoot":""}