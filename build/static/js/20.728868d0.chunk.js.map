{"version":3,"sources":["components/shared-components/StatisticWidget/index.js","components/shared-components/CustomStatistic/index.js","components/shared-components/DataDisplayWidget/index.js","constants/ChartConstant.js","components/shared-components/ChartWidget/index.js","views/app-views/home/index.js"],"names":["StatisticWidget","title","value","status","subtitle","prefix","className","ArrowUpOutlined","ArrowDownOutlined","Value","props","size","CustomStatistic","defaultProps","DataDisplayWidget","icon","color","avatarSize","vertical","customStatisticProps","Flex","alignItems","flexDirection","shape","COLORS","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","titleStyle","zIndex","extraStyle","right","top","ChartWidget","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","renderChart","onResize","setTimeout","ref","Home","useSelector","state","userCount","dashboard","userData","userError","userLoading","userDelete","doctorCount","doctorData","doctorError","doctorLoading","doctorDelete","shallowEqual","dispatch","useDispatch","getUserCountInit","getDoctorCountInit","visitorChartData","name","data","gutter","xs","sm","md","lg","xl","UserOutlined","span"],"mappings":"uMA0CeA,EArCS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,MAAOC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC1D,OACC,eAAC,IAAD,WACEJ,GAAS,oBAAIK,UAAU,OAAd,SAAsBL,IAChC,sBAAKK,UAAS,UAAKD,EAAQ,SAAU,GAAvB,YAA6BJ,EAAQ,OAAO,IAA1D,UACEI,EAAS,qBAAKC,UAAU,OAAf,SAAuBD,IAAgB,KACjD,gCACC,sBAAKC,UAAU,4BAAf,UACC,oBAAIA,UAAU,wBAAd,SAAuCJ,IAEtCC,EACA,uBAAMG,UAAS,6CAAmD,IAAXH,GAAgBA,EAAS,EAAI,eAAiB,eAArG,UACEA,EACW,IAAXA,GAAgBA,EAAS,EAAI,cAACI,EAAA,EAAD,IAAsB,cAACC,EAAA,EAAD,OAGrD,QAGDJ,GAAY,qBAAKE,UAAU,uBAAf,SAAuCF,c,yBCrBnDK,EAAQ,SAAAC,GACb,IAAIR,EACJ,OAAOQ,EAAMC,MACZ,IAAK,KACJT,EAAQ,oBAAII,UAAU,wBAAd,SAAuCI,EAAMR,QACrD,MACD,IAAK,KACJA,EAAQ,oBAAII,UAAU,wBAAd,SAAuCI,EAAMR,QACrD,MACD,IAAK,KACJA,EAAQ,oBAAII,UAAU,wBAAd,SAAuCI,EAAMR,QACrD,MACD,QACCA,EAAQ,oBAAII,UAAU,wBAAd,SAAuCI,EAAMR,QAEvD,OAAOA,GAGKU,EAAkB,SAAAF,GAC9B,IAAQC,EAAuBD,EAAvBC,KAAMT,EAAiBQ,EAAjBR,MAAOD,EAAUS,EAAVT,MACrB,OACC,gCACC,cAAC,EAAD,CAAOC,MAAOA,EAAOS,KAAMA,IAC3B,mBAAGL,UAAU,kBAAb,SAAgCL,QAcnCW,EAAgBC,aAAe,CAC9BF,KAAM,MAIQC,QCxCTE,EAAoB,SAAAJ,GACzB,IAAQC,EAA0DD,EAA1DC,KAAMT,EAAoDQ,EAApDR,MAAOD,EAA6CS,EAA7CT,MAAOc,EAAsCL,EAAtCK,KAAMC,EAAgCN,EAAhCM,MAAOC,EAAyBP,EAAzBO,WAAYC,EAAaR,EAAbQ,SAC/CC,EAAuB,CAAER,OAAMT,QAAOD,SAC5C,OACC,cAAC,IAAD,UACC,eAACmB,EAAA,EAAD,CAAMC,WAAW,SAASC,cAAeJ,EAAW,SAAW,MAA/D,UACC,cAAC,IAAD,CAAQP,KAAMM,EAAYM,MAAM,SAASR,KAAMA,EAAMT,UAAS,qBAAgBU,KAC9E,qBAAKV,UAAWY,EAAW,mBAAqB,OAAhD,SACC,cAAC,EAAD,eAAqBC,YAO1BL,EAAkBD,aAAe,CAChCI,WAAY,GACZC,UAAU,GAGIJ,Q,mCCTFU,EAAS,CAhBC,UACA,UACA,UACA,UACA,UACA,UACA,WAiCVC,EAA6B,CACzCC,MAAO,CACNC,KAAM,CACLC,SAAS,GAEVC,QAAS,CACRC,MAAM,IAGRC,OAAO,GAAD,OAAMP,GACZQ,WAAY,CACXJ,SAAS,GAEVK,OAAQ,CACPC,MAAO,EACPC,MAAO,SACPC,QAAS,SAEVC,OAAQ,CACPC,SAAU,MACVC,gBAAiB,QACjBC,SAAU,GACVC,WAAY,CACXvB,SAAU,IAEXwB,sBAAuB,SAASC,EAAKC,GACpC,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQC,OAAOH,EAAKI,aAAaJ,EAAKK,kBAGpEC,MAAO,CACNC,WAAY,IAEbC,KAAM,CACLF,MAAO,CACNG,MAAO,CACNvB,MAAM,IAGNwB,MAAO,CACRD,MAAO,CACLvB,MAAM,MAMEyB,EAA0B,eAAO9B,GAEjC+B,EAA4B,CACxC9B,MAAO,CACNC,KAAM,CACLC,SAAS,GAEVC,QAAS,CACRC,MAAM,IAGR2B,YAAa,CACZC,IAAK,CACJC,YAAY,EACZC,YAAa,OACbC,eAAgB,UAChBC,YAAa,YAGf/B,OAAO,GAAD,OAAMP,GACZQ,WAAY,CACXJ,SAAS,GAEVK,OAAQ,CACPH,MAAM,EACNI,MAAO,EACPC,MAAO,SACPJ,OAAQ,CAAC,gBAEVM,OAAQ,CACPC,SAAU,MACVC,gBAAiB,QACjBC,SAAU,GACVuB,cAAc,EACdtB,WAAY,CACXvB,SAAU,IAEXwB,sBAAuB,SAASC,EAAKC,GACpC,OAAOD,EAAM,MAAQC,EAAKC,EAAEC,QAAQC,OAAOH,EAAKI,aAAaJ,EAAKK,kBAGpEC,MAAO,CACNC,WAAY,IAEba,KAAM,CACLC,QAAS,GAEVC,QAAS,CACRC,EAAG,CACFC,UAAW,SAAAzB,GAAG,gBAAQA,O,GAMjB,GAAD,OAAMnB,G,gBChIP6C,EAAa,CAClB/B,SAAU,WACVgC,OAAQ,KAGHC,EAAY,CACjBjC,SAAU,WACVgC,OAAQ,IACRE,MAAO,IACPC,IAAK,QAgBAC,EAAc,SAAC,GAAoG,IAAnGzE,EAAkG,EAAlGA,MAAO8C,EAA2F,EAA3FA,OAAQb,EAAmF,EAAnFA,MAAOyC,EAA4E,EAA5EA,OAAQC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,cAAeC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACnGC,EAd6B,SAAAJ,GACjC,OAAQA,GACP,IAAK,OACJ,OAAOtD,EACR,IAAK,MACJ,OAAO+B,EACR,IAAK,OACJ,OAAOD,EACR,QACC,OAAO9B,GAKK2D,CAA0BL,GAClCM,EAAWC,OAAOC,WAAa,IAC/BC,EAAkB,WACvB,GAAGC,EAASC,QAAS,CAAC,IAAD,EACdC,EAAUF,EAASC,QAAQE,iBAAiB,yBAAyB,GAC3ED,EAAQE,MAAMC,YAAd,UAA+BT,EAAW,EAAH,UAAOU,EAASL,eAAhB,aAAO,EAAkBM,YAAhE,MACGf,IAAcgB,MAChBN,EAAQE,MAAMrB,MAAQ,OACtBmB,EAAQE,MAAMK,KAAO,KAElBb,IACHM,EAAQE,MAAMvD,SAAW,WACzBqD,EAAQE,MAAMpB,IAAM,EACpBkB,EAAQE,MAAMM,eAAiB,QAC/BR,EAAQE,MAAMO,QAAU,KAK3BC,qBAAU,WACTb,MAEE,IAEH,IAAMO,EAAWO,iBAAO,MAClBb,EAAWa,mBAEjBnB,EAAQjC,MAAMC,WAAayB,EACxBC,IACFM,EAAO,2BAAOA,GAAYN,IAG3B,IAMM0B,EAAc,kBACnB,cAAC,IAAD,CAAqBC,cANrBC,YAAW,WACVjB,MACE,KAIH,SACC,qBAAKK,MAAOZ,IAAcgB,IAAU,CAAChB,UAAW,OAAQ,GAAI3E,UAAU,WAAWoG,IAAKjB,EAAtF,SACC,cAAC,IAAD,CAAWN,QAASA,EAASJ,KAAMA,EAAMhC,OAAQA,EAAQb,MAAOA,EAAOyC,OAAQA,SAKlF,OACC,mCACEG,EACA,cAAC,IAAD,UACC,sBAAKxE,UAAS,4BAAuB4E,GAArC,UACE,qBAAKW,MAAQR,EAAwB,GAAbhB,EAAxB,SAA0CpE,KAAgB,oBAAIK,UAAU,mBAAmBuF,MAAQR,EAAwB,GAAbhB,EAApD,SAAsEpE,IAChI+E,GAAS,qBAAK0B,IAAKX,EAAUF,MAAQR,EAAwB,GAAbd,EAAvC,SAAyDS,IAClEuB,SAIHA,OA4BJ7B,EAAY7D,aAAe,CAC1BkC,OAAQ,GACR4B,OAAQ,IACRzC,MAAO,OACP4C,MAAM,EACNC,KAAM,QAGQL,Q,SCjBAiC,UA1GF,WACX,MAAmCC,aACjC,SAACC,GAAD,MAAY,CACVC,UAAWD,EAAME,UAAUC,SAC3BC,UAAWJ,EAAME,UAAUE,UAC3BC,YAAaL,EAAME,UAAUG,YAC7BC,WAAYN,EAAME,UAAUI,WAE5BC,YAAaP,EAAME,UAAUM,WAC7BC,YAAaT,EAAME,UAAUO,YAC7BC,cAAeV,EAAME,UAAUQ,cAC/BC,aAAcX,EAAME,UAAUS,gBAGhCC,KAbMX,EAAR,EAAQA,UAAWM,EAAnB,EAAmBA,YAiBbM,EAAWC,cAEjBtB,qBAAU,WACRqB,EAASE,eACTF,EAASG,iBACR,CAACH,IACJ,IAAMI,EAAmB,CACvB/E,OAAQ,CACN,CACEgF,KAAM,SACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,KAEnD,CACED,KAAM,eACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAGvD7E,WAAY,CACV,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,WAGJ,OACE,gCACE,cAAC,IAAD,CAAK8E,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,eAAC,IAAD,CAAKJ,OAAQ,GAAb,UACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzC,SACE,cAAC,EAAD,CACEvH,KAAM,cAACwH,EAAA,EAAD,IACNrI,MAAO4G,EACP7G,MAAM,gBACNe,MAAM,OACNL,KAAM,KACNM,WAAY,GACZC,UAAU,MAGd,cAAC,IAAD,CAAKgH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzC,SACE,cAAC,EAAD,CACEvH,KAAM,cAACwH,EAAA,EAAD,IACNrI,MAAOkH,EACPnH,MAAM,kBACNe,MAAM,OACNL,KAAM,KACNM,WAAY,GACZC,UAAU,MAGd,cAAC,IAAD,CAAKgH,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzC,SACE,cAAC,EAAD,CACErI,MAAM,UACNC,MAAM,MACNC,OAAQ,IACRC,SAAS,yCAMnB,cAAC,IAAD,CAAK6H,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,SACE,cAAC,IAAD,CAAKJ,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKO,KAAM,GAAX,SACE,cAAC,EAAD,CACEvI,MAAM,cACN8C,OAAQ+E,EAAiB/E,OACzB6B,MAAOkD,EAAiB3E,WACxBwB,OAAQ","file":"static/js/20.728868d0.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card } from 'antd';\r\nimport PropTypes from \"prop-types\";\r\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\r\n\r\nconst StatisticWidget = ({ title, value, status, subtitle, prefix }) => {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t{title && <h4 className=\"mb-0\">{title}</h4>}\r\n\t\t\t<div className={`${prefix? 'd-flex': ''} ${title ? 'mt-3':''}`}>\r\n\t\t\t\t{prefix ? <div className=\"mr-2\">{prefix}</div> : null}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<h1 className=\"mb-0 font-weight-bold\">{value}</h1>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstatus ? \r\n\t\t\t\t\t\t\t<span className={`font-size-md font-weight-bold ml-3 ${status !== 0 && status > 0 ? 'text-success' : 'text-danger'}`} >\r\n\t\t\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t\t\t{status !== 0 && status > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\r\n\t\t\t\t\t\t\t</span> \r\n\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{subtitle && <div className=\"text-gray-light mt-1\">{subtitle}</div>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nStatisticWidget.propTypes = {\r\n  \ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tvalue: PropTypes.string,\r\n\tsubtitle: PropTypes.string,\r\n\tstatus: PropTypes.number,\r\n\tprefix: PropTypes.element\r\n};\r\n\r\nexport default StatisticWidget","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Value = props => {\r\n\tlet value;\r\n\tswitch(props.size) {\r\n\t\tcase 'lg':\r\n\t\t\tvalue = <h1 className=\"mb-0 font-weight-bold\">{props.value}</h1>\r\n\t\t\tbreak;\r\n\t\tcase 'md':\r\n\t\t\tvalue = <h2 className=\"mb-0 font-weight-bold\">{props.value}</h2>\r\n\t\t\tbreak;\r\n\t\tcase 'sm':\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t}\r\n\treturn value\r\n}\r\n\r\nexport const CustomStatistic = props => {\r\n\tconst { size, value, title } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Value value={value} size={size}/>\r\n\t\t\t<p className=\"mb-0 text-muted\">{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCustomStatistic.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tsize: PropTypes.string,\r\n\tvalue: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n}\r\n\r\nCustomStatistic.defaultProps = {\r\n\tsize: 'md'\r\n};\r\n\r\n\r\nexport default CustomStatistic\r\n","import React from 'react'\r\nimport { Card, Avatar } from 'antd'\r\nimport Flex from '../Flex'\r\nimport CustomStatistic from '../CustomStatistic'\r\n\r\nconst DataDisplayWidget = props => {\r\n\tconst { size, value, title, icon, color, avatarSize, vertical } = props\r\n\tconst customStatisticProps = { size, value, title }\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" flexDirection={vertical ? 'column' : 'row'}>\r\n\t\t\t\t<Avatar size={avatarSize} shape=\"square\" icon={icon} className={`ant-avatar-${color}`}/>\r\n\t\t\t\t<div className={vertical ? 'mt-3 text-center' : 'ml-3'}>\r\n\t\t\t\t\t<CustomStatistic {...customStatisticProps}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDataDisplayWidget.defaultProps = {\r\n\tavatarSize: 50,\r\n\tvertical: false\r\n};\r\n\r\nexport default DataDisplayWidget\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = () => (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import { useEffect } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport StatisticWidget from \"components/shared-components/StatisticWidget\";\r\nimport DataDisplayWidget from \"components/shared-components/DataDisplayWidget\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport ChartWidget from \"components/shared-components/ChartWidget\";\r\nimport { getUserCountInit , getDoctorCountInit } from \"redux/actions/DashboardActions\";\r\nconst Home = () => {\r\n  const { userCount, doctorCount } = useSelector(\r\n    (state) => ({\r\n      userCount: state.dashboard.userData,\r\n      userError: state.dashboard.userError,\r\n      userLoading: state.dashboard.userLoading,\r\n      userDelete: state.dashboard.userDelete,\r\n\r\n      doctorCount: state.dashboard.doctorData,\r\n      doctorError: state.dashboard.doctorError,\r\n      doctorLoading: state.dashboard.doctorLoading,\r\n      doctorDelete: state.dashboard.doctorDelete,\r\n\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserCountInit());\r\n    dispatch(getDoctorCountInit());\r\n  }, [dispatch]);\r\n  const visitorChartData = {\r\n    series: [\r\n      {\r\n        name: \"Charge\",\r\n        data: [45, 52, 38, 24, 33, 26, 21, 20, 6, 8, 15, 10],\r\n      },\r\n      {\r\n        name: \"Consultation\",\r\n        data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\r\n      },\r\n    ],\r\n    categories: [\r\n      \"01 Jan\",\r\n      \"02 Jan\",\r\n      \"03 Jan\",\r\n      \"04 Jan\",\r\n      \"05 Jan\",\r\n      \"06 Jan\",\r\n      \"07 Jan\",\r\n      \"08 Jan\",\r\n      \"09 Jan\",\r\n      \"10 Jan\",\r\n      \"11 Jan\",\r\n      \"12 Jan\",\r\n    ],\r\n  };\r\n  return (\r\n    <div>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={18}>\r\n          <Row gutter={16}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={8}>\r\n              <DataDisplayWidget\r\n                icon={<UserOutlined />}\r\n                value={userCount}\r\n                title=\"User Register\"\r\n                color=\"blue\"\r\n                size={\"md\"}\r\n                avatarSize={50}\r\n                vertical={false}\r\n              />\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={8}>\r\n              <DataDisplayWidget\r\n                icon={<UserOutlined />}\r\n                value={doctorCount}\r\n                title=\"Doctor Register\"\r\n                color=\"cyan\"\r\n                size={\"md\"}\r\n                avatarSize={50}\r\n                vertical={false}\r\n              />\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={8}>\r\n              <StatisticWidget\r\n                title=\"Revenue\"\r\n                value=\"$51\"\r\n                status={8.8}\r\n                subtitle=\"Compare to last month (may)\"\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={18}>\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <ChartWidget\r\n                title=\"Charge Data\"\r\n                series={visitorChartData.series}\r\n                xAxis={visitorChartData.categories}\r\n                height={400}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}